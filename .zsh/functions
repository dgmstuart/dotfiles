# Blog
function newpost(){
  cd ${BLOG_HOME:?"Need to set BLOG_HOME to the location of the octopress blog directory"}
  output=$( octopress new post "$@" )
  echo "$output"

  local return_code=$?
  if [ $return_code -eq 0 ]; then
    # Get the name of the file which was just created:
    post_path=$(grep -o '_posts\/.*\.markdown' <<< $output)
    # Stash all other posts (for faster generation)
    echo "Isolating post..."
    octopress isolate $post_path
    # Open with the cursor at the bottom of the header:
    vim -c 'normal G' $post_path
  fi
}

# Git
function gitfeature() {
  usage="usage: gitfeature \#12135 Users can do a thing"
  if [[ -z "$1" || -z "$2" ]] ; then
    echo $usage
    return
  fi

  id=$1
  id=${id//\#} # Remove hashes

  shift # Get the rest of the arguments

  story_name=$@
  story_name=$(echo "$story_name" | awk '{print tolower($0)}') # downcase
  story_name=${story_name// /-} # replace spaces with dashes

  branch_name="feature/$id-$story_name"
  git checkout -b $branch_name
}


# Maintenance
function rmtemp(){
  if [ -s *~ ]; then
    rm *~
  fi
  if [ -s .*~ ]; then
    rm .*~
  fi
}

# Display the top N used commands
function top_commands() {
  history | tail -2000 | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head -${1:-20}
}

# Display the amount of free space left on disk
function freespace() {
  df -hl | grep /dev/disk1 | awk '{ print $(4) }';
}

function ip() {
  ifconfig en0| awk '/inet 192/{print $2}'
}
